#4.5.17
import math
import xml.etree.ElementTree as ET

tree = ET.parse("5MIN H1.XML")
root = tree.getroot()

#example to create a dictionary of the start times for possessions
poschange = 0
pRight = 0
pLeft = 0
possession = {}
pos = 1

count = [[2,2],[1,1],[1,2],[1,3],[1,4],[1,5],[0,6],[0,7],[0,8],[0,9],[1,10],[1,11],[1,12],[0,13],[0,14],[0,15]]

for a,b in zip(count,count[1:]):
    if a[0] != b[0]:
        poschange += 1
        if b[0] == 1:
            pRight += 1
            possession["Right %s" % pRight] = b[1]
        if b[0] == 0:
            pLeft += 1
            possession["Left %s" % pLeft] = b[1]

#print(possession)

ball = []
T1P1 = []
T1P2 = []
T1P3 = []
T1P4 = []
T1P5 = []
T2P1 = []
T2P2 = []
T2P3 = []
T2P4 = []
T2P5 = []
R1 = []
R2 = []
R3 = []
team1 = []
team2 = []
refs = []
bal = []

times = []
timeslst = []
gameclock = []

for moment in root.iter("moment"):
    locations = moment.get("locations")
    places = locations.split(";")   #splits location data
    if len(places) != 14: # if there arent 14 indexes in a place then it skips that moment 
        del moment
    else: #runs code as usual 
        time = moment.get("time")
        timeslst.append(int(time)) #organizes times into a list 
        clock = moment.get("game-clock")
        gameclock.append(float(clock))
        bal.append(places[0])
        team1.append(places[1:6])
        team2.append(places[6:11]) 
        refs.append(places[11:14])

#takes list of points, isolates coordinates, and makes them floats
for item in bal:
    coord = item.split(",")
    thg = [float(x) for x in coord]
    ball.append(thg[2:5])

#consolidates the team data so we don't have to go through 14 for statements
for item in team1:
    for y in item:
        coord = y.split(",")
        thg = [float(x) for x in coord]
        if item.index(y) == 0:
            T1P1.append(thg[2:4])
        elif item.index(y) == 1:
            T1P2.append(thg[2:4])
        elif item.index(y) == 2:
            T1P3.append(thg[2:4])
        elif item.index(y) == 3:
            T1P4.append(thg[2:4])
        elif item.index(y) == 4:
            T1P5.append(thg[2:4])          

for item in team2:
    for y in item:
        coord = y.split(",")
        thg = [float(x) for x in coord]
        if item.index(y) == 0:
            T2P1.append(thg[2:4])
        elif item.index(y) == 1:
            T2P2.append(thg[2:4])
        elif item.index(y) == 2:
            T2P3.append(thg[2:4])
        elif item.index(y) == 3:
            T2P4.append(thg[2:4])
        elif item.index(y) == 4:
            T2P5.append(thg[2:4])
            
for item in refs:
    for y in item:
        coord = y.split(",")
        thg = [float(x) for x in coord]
        if item.index(y) == 0:
            R1.append(thg[2:4])
        elif item.index(y) == 1:
            R2.append(thg[2:4])
        elif item.index(y) == 2:
            R3.append(thg[2:4]) 
        
DukePos = {}
FAPos = {}
np = {}

#possessions
pDuke = 0
pFlorida = 0
nopos = 0
count = [2]

ziplist = zip(ball,T1P1,T1P2,T1P3,T1P4,T1P5,T2P1,T2P2,T2P3,T2P4,T2P5,timeslst,gameclock)
#for aa, ab in zip(T1P1,T2P2):
for b,aa,ab,ac,ad,ae,ba,bb,bc,bd,be,tl,gc in ziplist:
    if b[0] >= 47 and aa[0] >= 47 and ab[0] >= 47 and ac[0] >= 47 and ad[0] >= 47 and ae[0] >= 47 and ba[0] >= 47 and bb[0] >= 47 and bc[0] >= 47 and bd[0] >= 47 and be[0] >= 47:
        count.append(1)
    elif b[0] <= 47 and aa[0] <= 47 and ab[0] <= 47 and ac[0] <= 47 and ad[0] <= 47 and ae[0] <= 47 and ba[0] <= 47 and bb[0] <= 47 and bc[0] <= 47 and bd[0] <= 47 and be[0] <= 47:
        count.append(0)
    else :
        count.append(2)

posnumD = 1
posnumFA = 1
npn = 1 

poschange = 0


for a,b,st in zip(count,count[1:], timeslst):
    if a != b:
        poschange += 1
        et = timeslst[timeslst.index(st)-1]
        if b == 1:
            pDuke += 1
            DukePos['possession %s' % posnumD] = t
            posnumD += 1
        if b != 1:
            pFlorida += 1
            FAPos['possession %s' % posnumFA] = t
            posnumFA += 1
        elif b == 2:
            nopos =+ 1 
            np["nopossession %s" % npn] = t 
            npn += 1
print(DukePos)
print(FAPos)
print(np)



#lists of the stuff above
poschange = 0
pRight = 0
pLeft = 0
possession = []

count = [[3,0],[1,1],[1,2],[1,3],[1,4],[1,5],[0,6],[0,7],[0,8],[0,9],[1,10],[1,11],[1,12],[0,13],[0,14],[0,15]]

for a,b in zip(count,count[1:]):
    if a[0] != b[0]:
        poschange += 1
        if b[0] == 1:
            pRight += 1
            possession.append([poschange,"R",pRight,b[1]])

        elif b[0] == 0:
            pLeft += 1
            possession.append([poschange,"R",pRight,b[1]])
                        
print(possession)
